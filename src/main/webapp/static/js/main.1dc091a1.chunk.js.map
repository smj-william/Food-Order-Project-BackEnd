{"version":3,"sources":["utils.js","components/FoodList.js","components/LoginForm.js","components/MyCart.js","components/SignupForm.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","signup","data","body","JSON","stringify","Option","Select","AddToCartButton","itemId","useState","loading","setLoading","title","type","icon","PlusOutlined","onClick","addItemToCart","message","success","catch","err","error","finally","FoodList","foodData","setFoodData","curRest","setCurRest","restaurants","setRestaurants","loadingRest","setLoadingRest","useEffect","json","restId","value","onSelect","placeholder","style","width","onChange","map","item","id","name","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","Item","extra","src","imageUrl","alt","height","display","price","LoginForm","state","onFinish","setState","props","onSuccess","render","margin","rules","required","prefix","UserOutlined","Password","LockOutlined","htmlType","React","Component","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","visible","footer","justifyContent","strong","totalPrice","marginRight","disabled","orderItemList","length","itemLayout","Meta","menuItem","description","SignupForm","displayModal","handleCancel","signupOnClick","onCancel","destroyOnClose","initialValues","remember","preserve","Header","Layout","Content","Title","App","authed","setAuthed","className","level","color","lineHeight","marginBottom","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1dc091a1.chunk.js","sourcesContent":["export const login = (credential) => {\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\n  \n    return fetch(loginUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\",\n    }).then((response) => {\n      if (response.status < 200 || response.status >= 300) {\n        throw Error(\"Fail to log in\");\n      }\n    });\n  };\n  \n  export const signup = (data) => {\n    const signupUrl = \"/signup\";\n  \n    return fetch(signupUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then((response) => {\n      if (response.status < 200 || response.status >= 300) {\n        throw Error(\"Fail to sign up\");\n      }\n    });\n  };\n  \n  export const getMenus = (restId) => {\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\n      if (response.status < 200 || response.status >= 300) {\n        throw Error(\"Fail to get menus\");\n      }\n  \n      return response.json();\n    });\n  };\n  \n  export const getRestaurants = () => {\n    return fetch(\"/restaurants\").then((response) => {\n      if (response.status < 200 || response.status >= 300) {\n        throw Error(\"Fail to get restaurants\");\n      }\n  \n      return response.json();\n    });\n  };\n  \n  export const getCart = () => {\n    return fetch(\"/cart\").then((response) => {\n      if (response.status < 200 || response.status >= 300) {\n        throw Error(\"Fail to get shopping cart data\");\n      }\n  \n      return response.json();\n    });\n  };\n  \n  export const checkout = () => {\n    return fetch(\"/checkout\").then((response) => {\n      if (response.status < 200 || response.status >= 300) {\n        throw Error(\"Fail to checkout\");\n      }\n    });\n  };\n  \n  export const addItemToCart = (itemId) => {\n    return fetch(`/order/${itemId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\",\n    }).then((response) => {\n      if (response.status < 200 || response.status >= 300) {\n        throw Error(\"Fail to add menu item to shopping cart\");\n      }\n    });\n  };\n  \n  ","import { Button, Card, List, message, Select, Tooltip } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { addItemToCart, getMenus, getRestaurants } from \"../utils\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nconst { Option } = Select;\n\nconst AddToCartButton = ({ itemId }) => {\n  const [loading, setLoading] = useState(false);\n\n  const AddToCart = () => {\n    setLoading(true);\n    addItemToCart(itemId)\n      .then(() => message.success(`Successfully add item`))\n      .catch((err) => message.error(err.message))\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <Tooltip title=\"Add to shopping cart\">\n      <Button\n        loading={loading}\n        type=\"primary\"\n        icon={<PlusOutlined />}\n        onClick={AddToCart}\n      />\n    </Tooltip>\n  );\n};\n\nconst FoodList = () => {\n  const [foodData, setFoodData] = useState([]);\n  const [curRest, setCurRest] = useState();\n  const [restaurants, setRestaurants] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingRest, setLoadingRest] = useState(false);\n\n  useEffect(() => {\n    setLoadingRest(true);\n    getRestaurants()\n      .then((data) => {\n        setRestaurants(data);\n      })\n      .catch((err) => {\n        message.error(err.message);\n      })\n      .finally(() => {\n        setLoadingRest(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (curRest) {\n      setLoading(true);\n      getMenus(curRest)\n        .then((data) => {\n          setFoodData(data);\n        })\n        .catch((err) => {\n          message.error(err.message);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }, [curRest]);\n\n  return (\n    <>\n      <Select\n        value={curRest}\n        onSelect={(value) => setCurRest(value)}\n        placeholder=\"Select a restaurant\"\n        loading={loadingRest}\n        style={{ width: 300 }}\n        onChange={() => {}}\n      >\n        {restaurants.map((item) => {\n          return <Option value={item.id}>{item.name}</Option>;\n        })}\n      </Select>\n      {curRest && (\n        <List\n          style={{ marginTop: 20 }}\n          loading={loading}\n          grid={{\n            gutter: 16,\n            xs: 1,\n            sm: 2,\n            md: 4,\n            lg: 4,\n            xl: 3,\n            xxl: 3,\n          }}\n          dataSource={foodData}\n          renderItem={(item) => (\n            <List.Item>\n              <Card\n                title={item.name}\n                extra={<AddToCartButton itemId={item.id} />}\n              >\n                <img\n                  src={item.imageUrl}\n                  alt={item.name}\n                  style={{ height: 340, width: \"100%\", display: \"block\" }}\n                />\n                {`Price: ${item.price}`}\n              </Card>\n            </List.Item>\n          )}\n        />\n      )}\n    </>\n  );\n};\n\nexport default FoodList;","import { Button, Form, Input, message } from \"antd\";\nimport React from \"react\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { login } from \"../utils\";\n\nclass LoginForm extends React.Component {\n  state = {\n    loading: false,\n  };\n\n  onFinish = (data) => {\n    this.setState({\n      loading: true,\n    });\n    login(data)\n      .then(() => {\n        message.success(`Login Successful`);\n        this.props.onSuccess();\n      })\n      .catch((err) => {\n        message.error(err.message);\n      })\n      .finally(() => {\n        this.setState({\n          loading: false,\n        });\n      });\n  };\n\n  render = () => {\n    return (\n      <Form\n        name=\"normal_login\"\n        onFinish={this.onFinish}\n        style={{\n          width: 300,\n          margin: \"auto\",\n        }}\n      >\n        <Form.Item\n          name=\"username\"\n          rules={[{ required: true, message: \"Please input your Username!\" }]}\n        >\n          <Input prefix={<UserOutlined />} placeholder=\"Username\" />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\n        >\n          <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={this.state.loading}>\n            Login\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  };\n}\n\nexport default LoginForm;","import { Button, Drawer, List, message, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { checkout, getCart } from \"../utils\";\n\nconst { Text } = Typography;\n\nconst MyCart = () => {\n  const [cartVisible, setCartVisible] = useState(false);\n  const [cartData, setCartData] = useState();\n  const [loading, setLoading] = useState(false);\n  const [checking, setChecking] = useState(false);\n\n  useEffect(() => {\n    if (!cartVisible) {\n      return;\n    }\n\n    setLoading(true);\n    getCart()\n      .then((data) => {\n        setCartData(data);\n      })\n      .catch((err) => {\n        message.error(err.message);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [cartVisible]);\n\n  const onCheckOut = () => {\n    setChecking(true);\n    checkout()\n      .then(() => {\n        message.success(\"Successfully checkout\");\n        setCartVisible(false);\n      })\n      .catch((err) => {\n        message.error(err.message);\n      })\n      .finally(() => {\n        setChecking(false);\n      });\n  };\n\n  const onCloseDrawer = () => {\n    setCartVisible(false);\n  };\n\n  const onOpenDrawer = () => {\n    setCartVisible(true);\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" shape=\"round\" onClick={onOpenDrawer}>\n        Cart\n      </Button>\n      <Drawer\n        title=\"My Shopping Cart\"\n        onClose={onCloseDrawer}\n        visible={cartVisible}\n        width={520}\n        footer={\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Text strong={true}>{`Total price: $${cartData?.totalPrice}`}</Text>\n            <div>\n              <Button onClick={onCloseDrawer} style={{ marginRight: 8 }}>\n                Cancel\n              </Button>\n              <Button\n                onClick={onCheckOut}\n                type=\"primary\"\n                loading={checking}\n                disabled={loading || cartData?.orderItemList.length === 0}\n              >\n                Checkout\n              </Button>\n            </div>\n          </div>\n        }\n      >\n        <List\n          loading={loading}\n          itemLayout=\"horizontal\"\n          dataSource={cartData?.orderItemList}\n          renderItem={(item) => (\n            <List.Item>\n              <List.Item.Meta\n                title={item.menuItem.name}\n                description={`$${item.price}`}\n              />\n            </List.Item>\n          )}\n        />\n      </Drawer>\n    </>\n  );\n};\n\nexport default MyCart;","import { Button, Form, Input, message, Modal } from \"antd\";\nimport React from \"react\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { signup } from \"../utils\";\n\nclass SignupForm extends React.Component {\n  state = {\n    displayModal: false,\n  };\n\n  handleCancel = () => {\n    this.setState({\n      displayModal: false,\n    });\n  };\n\n  signupOnClick = () => {\n    this.setState({\n      displayModal: true,\n    });\n  };\n\n  onFinish = (data) => {\n    signup(data)\n      .then(() => {\n        this.setState({\n          displayModal: false,\n        });\n        message.success(`Successfully signed up`);\n      })\n      .catch((err) => {\n        message.error(err.message);\n      });\n  };\n\n  render = () => {\n    return (\n      <>\n        <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\n          Register\n        </Button>\n        <Modal\n          title=\"Register\"\n          visible={this.state.displayModal}\n          onCancel={this.handleCancel}\n          footer={null}\n          destroyOnClose={true}\n        >\n          <Form\n            name=\"normal_register\"\n            initialValues={{ remember: true }}\n            onFinish={this.onFinish}\n            preserve={false}\n          >\n            <Form.Item\n              name=\"email\"\n              rules={[{ required: true, message: \"Please input your email!\" }]}\n            >\n              <Input prefix={<UserOutlined />} placeholder=\"Email\" />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your password!\" },\n              ]}\n            >\n              <Input prefix={<LockOutlined />} placeholder=\"Password\" />\n            </Form.Item>\n            <Form.Item\n              name=\"firstName\"\n              rules={[\n                { required: true, message: \"Please input your first name!\" },\n              ]}\n            >\n              <Input placeholder=\"firstname\" />\n            </Form.Item>\n            <Form.Item\n              name=\"lastName\"\n              rules={[\n                { required: true, message: \"Please input your last name!\" },\n              ]}\n            >\n              <Input placeholder=\"lastname\" />\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Register\n              </Button>\n            </Form.Item>\n          </Form>\n        </Modal>\n      </>\n    );\n  };\n}\n\nexport default SignupForm;","import { Layout, Typography } from \"antd\";\nimport { useState } from \"react\";\nimport FoodList from \"./components/FoodList\";\nimport LoginForm from \"./components/LoginForm\";\nimport MyCart from \"./components/MyCart\";\nimport SignupForm from \"./components/SignupForm\";\n\nconst { Header, Content } = Layout;\nconst { Title } = Typography;\n\nfunction App() {\n  const [authed, setAuthed] = useState(false);\n\n  return (\n    <Layout style={{ height: \"100vh\" }}>\n      <Header>\n        <div className=\"header\" style={{display:\"flex\", justifyContent: \"space-between\"}}>\n          <Title\n            level={2}\n            style={{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0 }}\n          >\n            MJ Food\n          </Title>\n          <div>{authed ? <MyCart /> : <SignupForm />}</div>\n        </div>\n      </Header>\n      <Content\n        style={{\n          padding: \"50px\",\n          maxHeight: \"calc(100% - 64px)\",\n          overflowY: \"auto\",\n        }}\n      >\n        {authed ? (\n          <FoodList />\n        ) : (\n          <LoginForm onSuccess={() => setAuthed(true)} />\n        )}\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}